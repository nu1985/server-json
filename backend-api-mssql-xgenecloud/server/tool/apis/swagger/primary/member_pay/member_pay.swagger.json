{
  "tags": [{
    "name": "member_pay",
    "description": "Everything about your member_pay"
  }],
  "paths": {
    "/api/v1/member_pay": {
      "post": {
        "tags": [
          "member_pay"
        ],
        "summary": "Add a new member_pay",
        "description": "",
        "operationId": "addmember_pay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "member_pay object that needs to add",
          "required": true,
          "schema": {
            "$ref": "#/definitions/member_pay"
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Get list",
        "description": "",
        "operationId": "getmember_pay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fields",
            "type": "string"
          }

        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/v1/member_pay/{member_payId}": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Find member_pay by ID",
        "description": "Returns a single member_pay",
        "operationId": "getmember_payById",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "member_payId",
          "in": "path",
          "description": "ID of member_pay to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/member_pay"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "member_pay not found"
          }
        }
      },
      "put": {
        "tags": [
          "member_pay"
        ],
        "summary": "Updates a member_pay",
        "description": "",
        "operationId": "updatemember_pay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "member_payId",
            "in": "path",
            "description": "ID of member_pay to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "member_pay object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/member_pay"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "member_pay"
        ],
        "summary": "Deletes a member_pay",
        "description": "",
        "operationId": "deletemember_pay",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "member_payId",
          "in": "path",
          "description": "ID of member_pay to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "member_pay not found"
          }
        }
      }
    },


    "/api/v1/member_pay/bulk": {
      "post": {
        "tags": [
          "member_pay"
        ],
        "summary": "Bulk member_pay insert",
        "description": "",
        "operationId": "bulkmember_payInsert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "member_pay objects",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "member_pay"
        ],
        "summary": "Updates a member_pay",
        "description": "",
        "operationId": "updatemember_pay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "member_pay objects with id",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "member_pay"
        ],
        "summary": "Deletes a member_pay",
        "description": "",
        "operationId": "deletemember_pay",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "member_pay objects contains id",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "member_pay not found"
          }
        }
      }
    },
    "/api/v1/member_pay/findOne": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "findOnemember_pay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }
      }
    },
    "/api/v1/member_pay/{member_payId}/exists": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Check member_pay with provided ID exists",
        "description": "Returns a single member_pay",
        "operationId": "checkmember_payExists",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "member_payId",
          "in": "path",
          "description": "ID of member_pay",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/member_pay/count": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Get member_pay count",
        "operationId": "getmember_payCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "query",
          "name": "where",
          "type": "String",
          "description": "Where expression"
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/member_pay/groupby/{columnName}": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Group by column",
        "description": "",
        "operationId": "member_payGroupByColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }
      }
    },
    "/api/v1/member_pay/distribution/{columnName}": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "",
        "description": "",
        "operationId": "member_payDistribution",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "path",
          "name": "columnName",
          "type": "String",
          "description": "Column name"
        }, {
          "in": "query",
          "name": "min",
          "description": "min value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "max",
          "description": "max value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "step",
          "description": "step value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "steps",
          "description": "steps value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "func",
          "description": "comma separated aggregation functions",
          "type": "string"
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/member_pay/distinct/{columnName}": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "member_payDistinct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/member_pay/aggregate/{columnName}": {
      "get": {
        "tags": [
          "member_pay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "member_payAggregate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "path",
            "name": "fields",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "path",
            "name": "func",
            "type": "String",
            "description": "Comma seperated aggregate functions"
          },
          {
            "in": "query",
            "name": "having",
            "type": "String",
            "description": "Having expression"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fields",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/member_pay"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "member_pay": {
      "type": "object",
      "properties": {
        "bill_id": {
          "type": "integer",
          "nullable": false,
          "readOnly": true
        },
        "sesion_unit": {
          "type": "integer"
        },
        "bill_Up_id": {
          "type": "number",
          "format": "float"
        },
        "bill_G_id": {
          "type": "integer"
        },
        "member_id": {
          "type": "integer"
        },
        "money_pay1": {
          "type": "number",
          "format": "float"
        },
        "money_pay2": {
          "type": "number",
          "format": "float"
        },
        "years": {
          "type": "string"
        },
        "money_pay3": {
          "type": "number",
          "format": "float"
        },
        "dead_number": {
          "type": "string"
        },
        "dead_number1": {
          "type": "string"
        },
        "dead_number2": {
          "type": "string"
        },
        "pay_number": {
          "type": "integer"
        },
        "pay_number2": {
          "type": "integer"
        },
        "member_pay_number": {
          "type": "integer"
        },
        "member_pay_number2": {
          "type": "integer"
        },
        "money_pay4": {
          "type": "number",
          "format": "float"
        },
        "money_pay5": {
          "type": "number",
          "format": "float"
        },
        "money_pay6": {
          "type": "number",
          "format": "float"
        },
        "money_pay44": {
          "type": "number",
          "format": "float"
        },
        "money_pay_detail": {
          "type": "string"
        },
        "date_to_pay": {
          "type": "string"
        },
        "DPay": {
          "type": "integer"
        },
        "MPay": {
          "type": "string"
        },
        "YPay": {
          "type": "string"
        },
        "date_to_pay_2": {
          "type": "string"
        },
        "DPay_2": {
          "type": "integer"
        },
        "MPay_2": {
          "type": "string"
        },
        "YPay_2": {
          "type": "string"
        },
        "name_pay": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "adminname": {
          "type": "string"
        },
        "notbill": {
          "type": "string"
        },
        "printpassbook": {
          "type": "integer"
        },
        "pay_type": {
          "type": "integer"
        },
        "status_bill_mem": {
          "type": "integer"
        },
        "tumbon_id_save": {
          "type": "integer"
        }
      }
    }
  }
}