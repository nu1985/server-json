{
  "tags": [{
    "name": "monJay",
    "description": "Everything about your monJay"
  }],
  "paths": {
    "/api/v1/monJay": {
      "post": {
        "tags": [
          "monJay"
        ],
        "summary": "Add a new monJay",
        "description": "",
        "operationId": "addmonJay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "monJay object that needs to add",
          "required": true,
          "schema": {
            "$ref": "#/definitions/monJay"
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Get list",
        "description": "",
        "operationId": "getmonJay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fields",
            "type": "string"
          }

        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/v1/monJay/{monJayId}": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Find monJay by ID",
        "description": "Returns a single monJay",
        "operationId": "getmonJayById",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "monJayId",
          "in": "path",
          "description": "ID of monJay to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/monJay"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "monJay not found"
          }
        }
      },
      "put": {
        "tags": [
          "monJay"
        ],
        "summary": "Updates a monJay",
        "description": "",
        "operationId": "updatemonJay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "monJayId",
            "in": "path",
            "description": "ID of monJay to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "monJay object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/monJay"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "monJay"
        ],
        "summary": "Deletes a monJay",
        "description": "",
        "operationId": "deletemonJay",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "monJayId",
          "in": "path",
          "description": "ID of monJay to return",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "monJay not found"
          }
        }
      }
    },


    "/api/v1/monJay/bulk": {
      "post": {
        "tags": [
          "monJay"
        ],
        "summary": "Bulk monJay insert",
        "description": "",
        "operationId": "bulkmonJayInsert",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "monJay objects",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/monJay"
            }
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "monJay"
        ],
        "summary": "Updates a monJay",
        "description": "",
        "operationId": "updatemonJay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "monJay objects with id",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/monJay"
            }
          }
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "monJay"
        ],
        "summary": "Deletes a monJay",
        "description": "",
        "operationId": "deletemonJay",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "monJay objects contains id",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/monJay"
            }
          }
        }],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "monJay not found"
          }
        }
      }
    },
    "/api/v1/monJay/findOne": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "findOnemonJay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/monJay"
            }
          }
        }
      }
    },
    "/api/v1/monJay/{monJayId}/exists": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Check monJay with provided ID exists",
        "description": "Returns a single monJay",
        "operationId": "checkmonJayExists",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "monJayId",
          "in": "path",
          "description": "ID of monJay",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/api/v1/monJay/count": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Get monJay count",
        "operationId": "getmonJayCount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "query",
          "name": "where",
          "type": "String",
          "description": "Where expression"
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/v1/monJay/groupby/{columnName}": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Group by column",
        "description": "",
        "operationId": "monJayGroupByColumn",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/monJay"
            }
          }
        }
      }
    },
    "/api/v1/monJay/distribution/{columnName}": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "",
        "description": "",
        "operationId": "monJayDistribution",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "path",
          "name": "columnName",
          "type": "String",
          "description": "Column name"
        }, {
          "in": "query",
          "name": "min",
          "description": "min value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "max",
          "description": "max value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "step",
          "description": "step value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "steps",
          "description": "steps value",
          "type": "integer",
          "format": "int64"
        }, {
          "in": "query",
          "name": "func",
          "description": "comma separated aggregation functions",
          "type": "string"
        }],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/monJay/distinct/{columnName}": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "monJayDistinct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "query",
            "name": "where",
            "type": "String",
            "description": "Where expression"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fieldst",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/api/v1/monJay/aggregate/{columnName}": {
      "get": {
        "tags": [
          "monJay"
        ],
        "summary": "Get first one from filtered data",
        "description": "",
        "operationId": "monJayAggregate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "in": "path",
            "name": "columnName",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "path",
            "name": "fields",
            "type": "String",
            "description": "Column name"
          },
          {
            "in": "path",
            "name": "func",
            "type": "String",
            "description": "Comma seperated aggregate functions"
          },
          {
            "in": "query",
            "name": "having",
            "type": "String",
            "description": "Having expression"
          },
          {
            "in": "query",
            "name": "fields",
            "type": "String",
            "description": "Comma seperated fields from the model"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Page size limit",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Pagination offset",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma seperated sort fields",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/monJay"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "monJay": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "nullable": false
        },
        "mon": {
          "type": "integer"
        },
        "years": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "balance_MJ501": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ501": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ501": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ502": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ502": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ502": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ503": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ503": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ503": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ504": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ504": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ504": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ505": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ505": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ505": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ506": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ506": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ506": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ507": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ507": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ507": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ508": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ508": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ508": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ509": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ509": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ509": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ510": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ510": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ510": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ511": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ511": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ511": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ512": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ512": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ512": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ513": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ513": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ513": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ514": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ514": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ514": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ515": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ515": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ515": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ516": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ516": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ516": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ517": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ517": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ517": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ518": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ518": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ518": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ519": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ519": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ519": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ520": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ520": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ520": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ521": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ521": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ521": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ522": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ522": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ522": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ523": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ523": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ523": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ524": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ524": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ524": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ525": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ525": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ525": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ526": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ526": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ526": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ527": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ527": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ527": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ528": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ528": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ528": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ529": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ529": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ529": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ530": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ530": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ530": {
          "type": "number",
          "format": "float"
        },
        "balance_MJ531": {
          "type": "number",
          "format": "float"
        },
        "sum_debitall_MJ531": {
          "type": "number",
          "format": "float"
        },
        "sum_keditall_MJ531": {
          "type": "number",
          "format": "float"
        },
        "date_rec": {
          "type": "string"
        },
        "adminname": {
          "type": "string"
        }
      }
    }
  }
}